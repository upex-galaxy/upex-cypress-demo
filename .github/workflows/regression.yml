#* 🧙🏻‍♂️BIENVENIDO A LOS PIPELINES DE CONTINUOUS INTEGRATION DE "ARI - Hija de Aurora"!
#! NO NECESITAS MODIFICAR NADA de este archivo...
#*🚀 Solo necesitas configurar las variables de entorno en el Panel "Run workflow" de GitHub Actions
#* 🧪 Este PIPELINE ejecutará la Regresión del Repo y subirá los resultados a Jira XRay
name: 🧪 Regression Testing CI Pipeline
run-name: ${{github.actor}}👨🏻‍🔬 triggered Regression in ${{github.ref_name}}

on:
  workflow_dispatch:
    inputs:
      os:
        description: 🚀Select the OS
        required: true
        default: 'ubuntu-latest'
        type: choice
        options:
        - ubuntu-latest
        - ubuntu-22.04
        - macos-latest
        - windows-latest
      environment:
        description: 🚀Select the Test Environment
        required: true
        default: 'QA'
        type: choice
        options: #? Orden de Deployments...
        - dev #? donde los developers work
        - sandbox #? donde los QA realizan smoke y exploratory testing.
        - QA #? donde los QA realizan smoke, sanity y regression testing.
        - staging #? donde los QA realizan smoke, sanity o regression testing.
        - uat #? donde los beta testers realizan acceptance testing.
        - prod #? donde los usuarios finales usan la App.

jobs:
  RegressionTesting:
    runs-on: ${{ github.event.inputs.os }}
    strategy:
      fail-fast: false
      matrix:
        browser: ['chrome'] #? Runs tests in Chrome (meaningful for E2E tests)
    environment:
      name: ${{ github.event.inputs.environment }}
    env:
      MOCHA_REPORT_DIR: cypress/tests_reports/${{ matrix.browser }}_mocha_report

    steps:
    - name: 💻 Checkout
      uses: actions/checkout@v4

    - name: 💿 Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: 🍙 Bun Setup
      uses: oven-sh/setup-bun@v2

    - name: 🧬 Install All Dependencies
      run: |
        bun install

    - name: 🔎 Check Typescript Code
      run: | #? Corre el linter de TypeScript para verificar errores de sintaxis.
        bun run check:ts

    - name: 🧪 Cypress Run Test Coverage on ${{ matrix.browser }}
      uses: cypress-io/github-action@v4
      with:
        browser: ${{ matrix.browser }}
        command: |
          bun run regression:${{ matrix.browser }}

    - name: 📬 Generate JUnit/Mocha Report for ${{ matrix.browser }}
      if: always()
      run: |
        bun run ${{ matrix.browser }}:report

    - name: 📦️ Get Jira Test Execution ID for Regression
      if: always()
      id: testexec
      run: | #? para obtener el ID del TX oficial de Regression de Jira
        if [[ "${{ matrix.browser }}" == "chrome" ]]; then
          echo "TXID=GX3-1526" >> $GITHUB_OUTPUT
        elif [[ "${{ matrix.browser }}" == "firefox" ]]; then
          echo "TXID=GX3-1527" >> $GITHUB_OUTPUT
        elif [[ "${{ matrix.browser }}" == "edge" ]]; then
          echo "TXID=GX3-1528" >> $GITHUB_OUTPUT
        fi

    - name: ✅ Import ${{ matrix.browser }} Test Results to Xray
      if: env.XRAY_CLIENT != '' && env.XRAY_SECRET != ''
      uses: mikepenz/xray-action@v3
      with: #OPCIONES PARA IMPORTAR LOS RESULTADOS DE PRUEBA A JIRA XRAY:
        username: ${{ env.XRAY_CLIENT}}
        password: ${{ env.XRAY_SECRET}}
        testFormat: 'junit' #! NO CAMBIAR
        testPaths: 'cypress/tests_results/junit/chrome_junit_report.xml' #! NO CAMBIAR
        testExecKey: ${{ env.TXID }} #! NO CAMBIAR
        projectKey: 'GX3' #! NO CAMBIAR
      env:
        TXID: ${{ steps.testexec.outputs.TXID }}
        XRAY_CLIENT: ${{ secrets.XRAY_CLIENT_ID }}
        XRAY_SECRET: ${{ secrets.XRAY_CLIENT_SECRET }}

    - name: 📊 Upload Artifact ${{ matrix.browser }} Mochawesome Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: regression-${{ matrix.browser }}-mocha-report
        path: ${{ env.MOCHA_REPORT_DIR }}
        retention-days: 15

    #* --------------- Mochawesome Report Build and Deploy ---------------
    - name: 🚀 Deploy Mocha Report to GitHub Pages
      if: always()
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_branch: gh-pages #? the branch used for the GitHub Pages content.
        #? the regression report will be published in the root of the gh-pages branch.
        publish_dir: ${{ env.MOCHA_REPORT_DIR }} #? the directory to be published.
        keep_files: true #? true is required to work properly with the subfolder option in the Build Allure Report step.
        #* -----------------------------------------

  Ari-Slack-Notification:
    needs: [RegressionTesting]
    if: always() #? will always run after the RegressionTesting job
    runs-on: ubuntu-latest
    steps:
    - name: 🔔 Slack Notification
      if: env.SLACK_WEBHOOK != '' #? will only run if the SLACK_WEBHOOK secret is provided
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        SLACK_USERNAME: Ari✨
        SLACK_MESSAGE: '🧪(${{ github.repository }}): ${{ github.actor }} triggered Sanity Test 🚀'
        SLACK_COLOR: ${{ job.status }}
        SLACK_ICON: ${{ secrets.ARI_PROFILE }}

  AutoMerge-into-Main:
    needs: [RegressionTesting, Ari-Slack-Notification]
    runs-on: ubuntu-latest
    steps:

    - name: 💻Checkout
      uses: actions/checkout@v4

    - name: 📦️ Create Pull Request
      uses: actions/github-script@v7
      with:
        script: |
          const { repo, owner } = context.repo;
          const result = await github.rest.pulls.create({
          title: '✅[QA REGRESSION PASSED]: Ready to Merge into MAIN',
          owner,
          repo,
          head: '${{ github.ref_name }}',
          base: 'main',
          body: [
              'Update branch by Automation Pipeline',
              '- (CI) Build Test Execution is Done✅',
              '- (CI) Integration-Regression Report is Done✅',
              '- (TestResults) No Conflicts in Repo Branch QA✅ '
          ].join('\n')
          });
          github.rest.issues.addLabels({
          owner,
          repo,
          issue_number: result.data.number,
          labels: ['autoPullRequest']
          });

    - name: 🧬 Merge QA -> MAIN
      if: success()
      uses: devmasx/merge-branch@master
      with:
        type: now
        label_name: 'autoPullRequest'
        target_branch: 'main' #ESTE ES LA RAMA FINAL DEL REPOSITORIO PRESENTE
        github_token: ${{ github.token }}
